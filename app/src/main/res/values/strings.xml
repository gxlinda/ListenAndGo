<resources>
    <string name="app_name">ListenAndGo</string>

    <string name="menu_home">Home</string>
    <string name="menu_search">Search</string>
    <string name="menu_favourites">Favourites</string>
    <string name="menu_chat">Chat</string>
    <string name="menu_shopping">Buy</string>

    <string name="category_mostPopular">Most popular</string>
    <string name="category_mostPopular_pop">Pop</string>
    <string name="category_mostPopular_rock">Rock</string>
    <string name="category_mostPopular_blues">Blues</string>
    <string name="category_mostPopular_metal">Metal</string>
    <string name="category_moods">Moods</string>
    <string name="category_moods_happy">Happy</string>
    <string name="category_moods_party">Party</string>
    <string name="category_moods_blue">Blue</string>
    <string name="category_moods_romantic">Romantic</string>
    <string name="category_soundtracks">Soundtracks</string>
    <string name="category_myPlaylists">My Playlists</string>

    <string name="listenAndGo">Listen &amp; Go</string>

    <string name="description_main">The user can choose from the upper menu, or from the categories. Categories would open a new screen with list of songs that belong to that category.\n\n
        POP category is clickable.</string>
    <string name="description_search">On search page user can search for authors, albums or song titles. To implement the search option directly at the toolbar, I have to add the search widget, define the
        searchable configuration in an xml file, and I have to connect to a database (ie. Yahoo Audio Search API), than display the results on this Search page in a ListView.</string>
    <string name="description_favourites">When the user listens to the music on the now playing screen, they have the option to mark the song as their favourites. These songs will be displayed here.
        The user can listen to a single song, or listen to all of them as a playlist. When there will be more than 0 favourite songs, the icon will become a filled heart.</string>
    <string name="description_chat">Chat screen includes a social media interface, with the main purpose to share the users thoughts about songs, authors, albums. It has to be connected to
        a server, and has to be able to handle logins and users personal infos.</string>
    <string name="description_shopping">The user can buy the songs online if they want to. They can search the database, and if they click on the Buy button, they can purchase the songs
        through for example 7Digital API.</string>
    <string name="description_category">Category is a list which comes from database. It can use ie. Spotify API. It includes ListView to list the song data, and also includes buttons
        to play or to buy songs.\n\nBuy button opens the Buy screen, Play button opens the now playing screen.</string>
    <string name="description_nowPlaying">Music player can play the choosen song from the library of the API. If the user wants, they can buy it (opens the Buy screen), they can add
        the song to the favourites (heart will be filled), or write a comment on the song which will be shared to the social media platform (input box has to appear above the activity,
        with the possibility to write comment, add emoticons. Link to the song has to be added automatically to this input box). The Progress Bar Widget has to be also implemented.</string>
</resources>
